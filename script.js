function _0xc0d6(_0x2a46e3, _0x1d2947) {
    const _0x59af2a = _0x59af();
    return _0xc0d6 = function(_0xc0d6ed, _0x4002d1) {
        _0xc0d6ed = _0xc0d6ed - 0xf4;
        let _0xe3c887 = _0x59af2a[_0xc0d6ed];
        return _0xe3c887;
    }, _0xc0d6(_0x2a46e3, _0x1d2947);
}

function _0x59af() {
    const _0x1ff75c = ['clientX', 'splice', 'MeshPhongMaterial', 'arc', 'div#tab-text', 'fadeOut', 'PerspectiveCamera', 'clientWidth', '578207IilPmE', '\x20>\x20', 'RepeatWrapping', 'target', '%,\x20white\x20', 'setSize', 'hararet', 'sqrt', 'hararetInterval', 'gothit', 'css', 'fillStyle', 'back.jpeg', 'average', 'white', 'material', 'div#game', 'autopilot', '%\x20loaded\x20(', 'clearRect', '700', 'ceil', 'add', 'WebGLRenderer', 'position', 'normal', 'cylinder', 'html', 'outputEncoding', 'stroke', 'mousedown', 'getObjectByName', 'block', 'clone', 'body', 'length', 'canvas#map', '378707XugebQ', '2499138DRbOGh', 'getTime', 'getContext', 'div#bullet', 'Scene', 'beginPath', 'scene', 'domElement', 'rotate', 'pow', '382713KoDRhm', 'startTheGame', 'bullet', 'CylinderGeometry', 'colorSpace', 'querySelector', '<div\x20style=\x22position:relative;float:left;width:100%;height:32px;\x22><span\x20style=\x22position:relative;float:left;left:11px;top:5px;font-weight:', 'total', '#hit-text', 'https://rawcdn.githack.com/alperenbutun/free-time-project/master/gltf/f35.glb', 'span#countdown', '#bullet-text', 'getElementById', 'MB\x20of\x2032MB)', 'span#percentage', 'undefined', 'front.jpeg', 'MeshBasicMaterial', 'set', 'name', 'linear-gradient(to\x20top,\x20', 'rotation', 'TextureLoader', 'background', 'PlaneGeometry', '#fullscreen-button', 'render', 'dtInterval', 'resize', 'wrapT', 'sRGBEncoding', 'CubeTextureLoader', 'moveCount', 'keyCode', 'remove', 'innerWidth', 'DirectionalLight', 'red', 'yellow', 'floor', 'abs', '178676beJjci', '#table', 'texture/cubemap/', 'loaded', 'traverse', '374725gnBIZD', 'color', 'sort', 'bottom.jpeg', 'addEventListener', 'none', 'Mesh', 'setPath', 'translateY', 'right.jpeg', 'round', '#table-head', 'flight', 'show', 'black', 'load', 'random', 'linear-gradient(to\x20top,\x20red\x20100%,\x20white\x20100%)', 'innerHeight', 'force', 'display', '16fZTJMy', '562796IZOYpp', 'style', 'visible', 'map', 'innerHTML', 'SRGBColorSpace', 'preventDefault', 'mouseup', '</span></div>', 'hit', 'push'];
    _0x59af = function() {
        return _0x1ff75c;
    };
    return _0x59af();
}
const _0x109e50 = _0xc0d6;
(function(_0x528f12, _0x5b08dd) {
    const _0x5edf6f = _0xc0d6,
        _0x386b5f = _0x528f12();
    while (!![]) {
        try {
            const _0xe3fb74 = -parseInt(_0x5edf6f(0x140)) / 0x1 + parseInt(_0x5edf6f(0x108)) / 0x2 + -parseInt(_0x5edf6f(0x14b)) / 0x3 + -parseInt(_0x5edf6f(0x174)) / 0x4 + -parseInt(_0x5edf6f(0x179)) / 0x5 + parseInt(_0x5edf6f(0x141)) / 0x6 + -parseInt(_0x5edf6f(0x11b)) / 0x7 * (-parseInt(_0x5edf6f(0x107)) / 0x8);
            if (_0xe3fb74 === _0x5b08dd) break;
            else _0x386b5f['push'](_0x386b5f['shift']());
        } catch (_0x29a696) {
            _0x386b5f['push'](_0x386b5f['shift']());
        }
    }
}(_0x59af, 0x39eaf));
import * as _0x1391a9 from 'three';
import {
    GLTFLoader
} from 'https://rawcdn.githack.com/mrdoob/three.js/master/examples/jsm/loaders/GLTFLoader.js';
let flightModel = '',
    hitTextTimeout = '',
    flightList = [],
    countdown = 0x3 * 0x6 * 0xa,
    continueGame = !![];
const scene = new _0x1391a9[(_0x109e50(0x145))]();
scene[_0x109e50(0x162)] = new _0x1391a9[(_0x109e50(0x16a))]()[_0x109e50(0xf9)](_0x109e50(0x176))['load']([_0x109e50(0xfb), 'left.jpeg', 'top.jpeg', _0x109e50(0xf5), _0x109e50(0x15b), _0x109e50(0x127)]);
const DirectionalLight = new _0x1391a9[(_0x109e50(0x16f))](0xffffff, 0x8);
scene[_0x109e50(0x131)](DirectionalLight);
const camera = new _0x1391a9[(_0x109e50(0x119))](0x32, window['innerWidth'] / window[_0x109e50(0x104)], 0.1, 0x2710),
    geometry = new _0x1391a9[(_0x109e50(0x14e))](0.19, 0.19, 0x80, 0x40),
    material = new _0x1391a9[(_0x109e50(0x15c))]({
        'color': 0xffffff
    }),
    canvas = document[_0x109e50(0x157)](_0x109e50(0x10b)),
    ctx = canvas[_0x109e50(0x143)]('2d'),
    renderer = new _0x1391a9[(_0x109e50(0x132))]();
renderer[_0x109e50(0x137)] = _0x1391a9[_0x109e50(0x169)], renderer[_0x109e50(0x120)](window[_0x109e50(0x16e)], window['innerHeight']), window[_0x109e50(0xf6)](_0x109e50(0x167), onWindowResize);

function onWindowResize() {
    const _0x44b63c = _0x109e50;
    renderer[_0x44b63c(0x120)](window[_0x44b63c(0x16e)], window[_0x44b63c(0x104)]);
}

function printCountDown() {
    const _0x43e494 = _0x109e50;
    if (!continueGame) return;
    if (Math[_0x43e494(0x172)](countdown) == countdown) {
        let _0x136230 = Math[_0x43e494(0x172)](countdown / 0x3c),
            _0x4ddc9c = countdown - Math[_0x43e494(0x172)](countdown / 0x3c) * 0x3c;
        document[_0x43e494(0x150)](_0x43e494(0x155))[_0x43e494(0x10c)] = _0x136230 + ':' + (_0x4ddc9c < 0xa ? '0' + _0x4ddc9c : _0x4ddc9c);
        if (countdown == 0x0) {
            continueGame = ![], document[_0x43e494(0x150)]('#table')['style'][_0x43e494(0x106)] = _0x43e494(0x13b), document[_0x43e494(0x150)](_0x43e494(0xfd))[_0x43e494(0x109)][_0x43e494(0x106)] = _0x43e494(0x13b), document[_0x43e494(0x150)](_0x43e494(0x117))[_0x43e494(0x109)][_0x43e494(0x106)] = _0x43e494(0xf7);
            return;
        }
    }
}

function bullet(_0x553f0a) {
    const _0x372905 = _0x109e50;
    if (!continueGame) return;
    if (flightList[_0x553f0a][_0x372905(0x149)] == '<' || flightList[_0x553f0a][_0x372905(0x149)] == '>' || flightList[_0x553f0a][_0x372905(0x149)] == '<<' || flightList[_0x553f0a][_0x372905(0x149)] == '>>' || flightList[_0x553f0a]['hararet'] >= 0x64) return;
    flightList[_0x553f0a]['dt'][_0x372905(0x112)]({
        'name': _0x372905(0xfe) + _0x553f0a + '' + new Date()[_0x372905(0x142)](),
        'moveCount': 0x0
    }), flightList[_0x553f0a][_0x372905(0x14d)]++, flightList[_0x553f0a][_0x372905(0x121)] += 0x1, clearInterval(flightList[_0x553f0a]['hararetInterval']), document[_0x372905(0x150)](_0x372905(0x156))[_0x372905(0x10c)] = flightList[_0x553f0a][_0x372905(0x14d)];
    let _0x1505d3 = flightList[_0x553f0a][_0x372905(0x121)] < 0x4b ? _0x372905(0x171) : 'red';
    document[_0x372905(0x150)](_0x372905(0x144))[_0x372905(0x109)][_0x372905(0x162)] = 'linear-gradient(to\x20top,\x20' + _0x1505d3 + '\x20' + flightList[_0x553f0a]['hararet'] + '%,\x20white\x20' + flightList[_0x553f0a][_0x372905(0x121)] + '%)';
}

function bulletStop(_0xd55589) {
    const _0xaf9b46 = _0x109e50;
    if (!continueGame) return;
    clearInterval(flightList[_0xd55589][_0xaf9b46(0x166)]), clearInterval(flightList[_0xd55589]['hararetInterval']), flightList[_0xd55589][_0xaf9b46(0x123)] = setInterval(function() {
        const _0x1e7cce = _0xaf9b46;
        flightList[_0xd55589][_0x1e7cce(0x121)] -= 0x1;
        flightList[_0xd55589][_0x1e7cce(0x121)] <= 0x0 && (flightList[_0xd55589][_0x1e7cce(0x121)] = 0x0, clearInterval(flightList[_0xd55589][_0x1e7cce(0x123)]));
        let _0x547794 = flightList[_0xd55589]['hararet'] < 0x4b ? _0x1e7cce(0x171) : _0x1e7cce(0x170);
        document[_0x1e7cce(0x150)](_0x1e7cce(0x144))[_0x1e7cce(0x109)][_0x1e7cce(0x162)] = 'linear-gradient(to\x20top,\x20' + _0x547794 + '\x20' + flightList[_0xd55589][_0x1e7cce(0x121)] + _0x1e7cce(0x11f) + flightList[_0xd55589]['hararet'] + '%)';
    }, 0x32);
}
const gt = new _0x1391a9[(_0x109e50(0x161))]()[_0x109e50(0x101)]('https://rawcdn.githack.com/alperenbutun/free-time-project/f881038/texture/texture.jpg'),
    gg = new _0x1391a9[(_0x109e50(0x163))](0x249f0, 0x249f0),
    gm = new _0x1391a9[(_0x109e50(0x115))]({
        'color': 0xffffff,
        'map': gt,
        'transparent': !![],
        'opacity': 0.025
    }),
    ground = new _0x1391a9['Mesh'](gg, gm);
ground[_0x109e50(0x160)]['x'] = -Math['PI'] / 0x2, ground[_0x109e50(0x12a)][_0x109e50(0x10b)]['repeat']['set'](0x40, 0x40), ground['material'][_0x109e50(0x10b)]['wrapS'] = _0x1391a9[_0x109e50(0x11d)], ground['material']['map'][_0x109e50(0x168)] = _0x1391a9[_0x109e50(0x11d)], ground[_0x109e50(0x12a)][_0x109e50(0x10b)][_0x109e50(0x14f)] = _0x1391a9[_0x109e50(0x10d)], scene['add'](ground), new GLTFLoader()['load'](_0x109e50(0x154), function(_0x39b89a) {
    const _0x24cbfc = _0x109e50;
    flightModel = _0x39b89a[_0x24cbfc(0x147)], flightModel[_0x24cbfc(0x178)](_0x2331a4 => {
        const _0x56d57b = _0x24cbfc;
        _0x2331a4[_0x56d57b(0x12a)] && (_0x2331a4[_0x56d57b(0x12a)]['color']['r'] = 0x0, _0x2331a4['material'][_0x56d57b(0x17a)]['g'] = 0x0, _0x2331a4[_0x56d57b(0x12a)]['color']['b'] = 0x0);
    });
    for (let _0x48639e = 0x0; _0x48639e < 0x5; _0x48639e++) {
        flightList[flightList['length']] = {
            'name': _0x24cbfc(0xfe) + _0x48639e,
            'rotate': '|',
            'autopilot': ![],
            'dt': [],
            'dtInterval': '',
            'bullet': 0x0,
            'hit': 0x0,
            'gothit': 0x0,
            'average': 0x0,
            'hararet': 0x0,
            'hararetInterval': '',
            'force': 0x0
        };
        let _0x5a3dd0 = flightModel[_0x24cbfc(0x13c)]();
        _0x5a3dd0[_0x24cbfc(0x15e)] = 'flight' + _0x48639e, _0x5a3dd0[_0x24cbfc(0x133)]['set'](Math[_0x24cbfc(0xfc)](Math[_0x24cbfc(0x102)]() * 0x2328) - 0x1194, 0x5, Math[_0x24cbfc(0xfc)](Math[_0x24cbfc(0x102)]() * 0x2328) - 0x1194), _0x5a3dd0['rotation']['y'] = Math['random']() * Math['PI'] * 0x2, scene[_0x24cbfc(0x131)](_0x5a3dd0);
    }
    var _0x2a2a8a = new _0x1391a9[(_0x24cbfc(0xf8))](geometry, material);
    _0x2a2a8a['name'] = _0x24cbfc(0x135), _0x2a2a8a['visible'] = ![], scene[_0x24cbfc(0x131)](_0x2a2a8a), document[_0x24cbfc(0x150)]('#fullscreen-button')[_0x24cbfc(0x109)]['display'] = _0x24cbfc(0x13b);
}, function(_0x5590da) {
    const _0x2c1540 = _0x109e50;
    let _0x10d9c8 = Math[_0x2c1540(0x130)](_0x5590da[_0x2c1540(0x177)] / _0x5590da[_0x2c1540(0x152)] * 0x64);
    document[_0x2c1540(0x150)](_0x2c1540(0x159))[_0x2c1540(0x10c)] = '\x20' + _0x10d9c8 + _0x2c1540(0x12d) + Math[_0x2c1540(0x130)](0x20 * _0x10d9c8 / 0x64) + _0x2c1540(0x158);
}), window[_0x109e50(0x14c)] = function() {
    const _0x3372ad = _0x109e50;
    document['querySelector'](_0x3372ad(0x164))[_0x3372ad(0x109)]['display'] = _0x3372ad(0xf7), setTimeout(function() {
        const _0x2e014c = _0x3372ad;
        document[_0x2e014c(0x13d)]['appendChild'](renderer[_0x2e014c(0x148)]), document[_0x2e014c(0x150)]('span#loading')['style']['display'] = 'none', document[_0x2e014c(0x150)](_0x2e014c(0x13f))[_0x2e014c(0x109)][_0x2e014c(0x106)] = _0x2e014c(0x13b), document[_0x2e014c(0x150)]('div#bullet')[_0x2e014c(0x109)][_0x2e014c(0x106)] = 'block', document[_0x2e014c(0x150)](_0x2e014c(0x12b))[_0x2e014c(0x109)][_0x2e014c(0x106)] = _0x2e014c(0x13b), document[_0x2e014c(0x150)](_0x2e014c(0x117))['style']['display'] = _0x2e014c(0x13b), animate();
    }, 0x1f4), document['addEventListener'](_0x3372ad(0x139), function(_0x3d93ef) {
        const _0x19e6db = _0x3372ad;
        if (!continueGame) return;
        switch (_0x3d93ef['which']) {
            case 0x1:
                !flightList[0x0][_0x19e6db(0x12c)] && (_0x3d93ef[_0x19e6db(0x113)] < _0x3d93ef[_0x19e6db(0x11e)][_0x19e6db(0x11a)] * 0.5 ? _0x3d93ef[_0x19e6db(0x113)] - _0x3d93ef[_0x19e6db(0x11e)]['clientWidth'] * 0.5 > -0x7b ? flightList[0x0]['rotate'] = '<<' : flightList[0x0]['rotate'] = '<' : _0x3d93ef[_0x19e6db(0x113)] - _0x3d93ef[_0x19e6db(0x11e)][_0x19e6db(0x11a)] * 0.5 < 0x7b ? flightList[0x0][_0x19e6db(0x149)] = '>>' : flightList[0x0][_0x19e6db(0x149)] = '>');
                break;
            case 0x2:
                bullet(0x0), flightList[0x0][_0x19e6db(0x166)] = setInterval(function() {
                    bullet(0x0);
                }, 0x32);
                break;
            case 0x3:
                bullet(0x0), flightList[0x0]['dtInterval'] = setInterval(function() {
                    bullet(0x0);
                }, 0x32);
                break;
        }
    }), document[_0x3372ad(0xf6)](_0x3372ad(0x10f), function(_0x1860d7) {
        const _0x3fb378 = _0x3372ad;
        if (!continueGame) return;
        switch (_0x1860d7['which']) {
            case 0x1:
                !flightList[0x0]['autopilot'] && (flightList[0x0][_0x3fb378(0x149)] = '|');
                break;
            case 0x2:
                bulletStop(0x0);
                break;
            case 0x3:
                bulletStop(0x0);
                break;
        }
    }), document[_0x3372ad(0xf6)]('contextmenu', function(_0x1e8ba0) {
        const _0x1e690d = _0x3372ad;
        _0x1e8ba0[_0x1e690d(0x10e)]();
    }), document[_0x3372ad(0xf6)]('keydown', function(_0x2774b0) {
        const _0x176b33 = _0x3372ad;
        if (!continueGame) return;
        switch (_0x2774b0[_0x176b33(0x16c)]) {
            case 0x9:
                _0x2774b0[_0x176b33(0x10e)](), document[_0x176b33(0x150)](_0x176b33(0x175))[_0x176b33(0x109)][_0x176b33(0x106)] = 'block', document[_0x176b33(0x150)](_0x176b33(0xfd))[_0x176b33(0x109)][_0x176b33(0x106)] = 'block', document[_0x176b33(0x150)]('div#tab-text')[_0x176b33(0x109)][_0x176b33(0x106)] = _0x176b33(0xf7);
                break;
        }
    }), document['addEventListener']('keyup', function(_0x486807) {
        const _0xd7ba88 = _0x3372ad;
        if (!continueGame) return;
        switch (_0x486807[_0xd7ba88(0x16c)]) {
            case 0x9:
                _0x486807[_0xd7ba88(0x10e)](), document[_0xd7ba88(0x150)](_0xd7ba88(0x175))[_0xd7ba88(0x109)]['display'] = _0xd7ba88(0xf7), document[_0xd7ba88(0x150)](_0xd7ba88(0xfd))[_0xd7ba88(0x109)][_0xd7ba88(0x106)] = _0xd7ba88(0xf7), document[_0xd7ba88(0x150)]('div#tab-text')['style']['display'] = 'block';
                break;
        }
    }), setInterval(function() {
        const _0x16450c = _0x3372ad;
        if (!continueGame) return;
        let _0x2fe06d = [];
        ctx[_0x16450c(0x12e)](0x0, 0x0, 0x7d, 0x7d);
        for (let _0x2f7287 = 0x0; _0x2f7287 < flightList[_0x16450c(0x13e)]; _0x2f7287++) {
            let _0x38c18a = scene['getObjectByName'](flightList[_0x2f7287]['name']),
                _0x378840 = [Math['floor'](_0x38c18a[_0x16450c(0x133)]['x'] / 0x50) + 62.5, Math[_0x16450c(0x172)](_0x38c18a[_0x16450c(0x133)]['z'] / 0x50) + 62.5];
            ctx[_0x16450c(0x126)] = _0x2f7287 == 0x0 ? 'red' : _0x16450c(0x100), ctx['strokeStyle'] = _0x2f7287 == 0x0 ? 'red' : _0x16450c(0x100), ctx[_0x16450c(0x146)](), ctx[_0x16450c(0x116)](_0x378840[0x0], _0x378840[0x1], 0x3, 0x0, 0x2 * Math['PI']), ctx['fill'](), ctx[_0x16450c(0x138)](), flightList[_0x2f7287][_0x16450c(0x128)] = flightList[_0x2f7287]['hit'] - flightList[_0x2f7287][_0x16450c(0x124)], _0x2fe06d[_0x2fe06d[_0x16450c(0x13e)]] = flightList[_0x2f7287];
        }
        _0x2fe06d[_0x16450c(0xf4)](function(_0x64a77b, _0x294e1b) {
            const _0xf069a6 = _0x16450c;
            return _0x294e1b[_0xf069a6(0x128)] - _0x64a77b['average'];
        }), document[_0x16450c(0x150)](_0x16450c(0x175))[_0x16450c(0x10c)] = '';
        for (let _0x4f56ec = 0x0; _0x4f56ec < _0x2fe06d['length']; _0x4f56ec++) {
            let _0x31750e = _0x4f56ec == 0x0 ? _0x16450c(0x12f) : _0x16450c(0x134);
            document['querySelector']('#table')[_0x16450c(0x10c)] += _0x16450c(0x151) + _0x31750e + '\x22>' + _0x2fe06d[_0x4f56ec][_0x16450c(0x15e)] + '</span><span\x20style=\x22position:relative;float:right;right:11px;top:5px;\x22>' + _0x2fe06d[_0x4f56ec]['hit'] + '/' + _0x2fe06d[_0x4f56ec][_0x16450c(0x124)] + _0x16450c(0x11c) + _0x2fe06d[_0x4f56ec][_0x16450c(0x128)] + _0x16450c(0x110);
        }
        countdown > 0x0 && (countdown -= 0.5, printCountDown());
        let _0x42b796 = flightList[0x0]['force'] * (0.1 + 0.1) < 0x4b ? 'yellow' : _0x16450c(0x170);
        document[_0x16450c(0x150)]('div#game')[_0x16450c(0x109)]['background'] = _0x16450c(0x15f) + _0x42b796 + '\x20' + flightList[0x0]['force'] * (0.1 + 0.1) + '%,\x20white\x20' + flightList[0x0][_0x16450c(0x105)] * (0.1 + 0.1) + '%)';
    }, 0x1f4);
};

function animate() {
    const _0x4d681d = _0x109e50;
    requestAnimationFrame(animate);
    if (!continueGame) return;
    beforeFlightLoop();
    for (let _0x2cda66 = 0x0; _0x2cda66 < flightList[_0x4d681d(0x13e)]; _0x2cda66++) {
        let _0x320539 = scene[_0x4d681d(0x13a)](flightList[_0x2cda66][_0x4d681d(0x15e)]);
        if (flightList[_0x2cda66][_0x4d681d(0x149)] === '<') _0x320539['rotation']['z'] -= Math['PI'] / 0x24, _0x320539['rotation']['z'] <= -Math['PI'] / 2.6 && (_0x320539['rotation']['z'] = -Math['PI'] / 2.6, _0x320539[_0x4d681d(0x160)]['y'] += Math['PI'] / 0x10e, flightList[_0x2cda66]['force']++);
        else {
            if (flightList[_0x2cda66][_0x4d681d(0x149)] === '>') _0x320539[_0x4d681d(0x160)]['z'] += Math['PI'] / 0x24, _0x320539['rotation']['z'] >= Math['PI'] / 2.6 && (_0x320539['rotation']['z'] = Math['PI'] / 2.6, _0x320539[_0x4d681d(0x160)]['y'] -= Math['PI'] / 0x10e, flightList[_0x2cda66][_0x4d681d(0x105)]++);
            else {
                if (flightList[_0x2cda66][_0x4d681d(0x149)] === '<<' && _0x320539[_0x4d681d(0x160)]['z'] == 0x0) _0x320539[_0x4d681d(0x160)]['y'] += Math['PI'] / 0x438, flightList[_0x2cda66][_0x4d681d(0x105)]--;
                else {
                    if (flightList[_0x2cda66][_0x4d681d(0x149)] === '>>' && _0x320539['rotation']['z'] == 0x0) _0x320539['rotation']['y'] -= Math['PI'] / 0x438, flightList[_0x2cda66][_0x4d681d(0x105)]--;
                    else {
                        if (Math[_0x4d681d(0x173)](_0x320539[_0x4d681d(0x160)]['z']) < Math['PI'] / 0x24) _0x320539[_0x4d681d(0x160)]['z'] = 0x0;
                        else {
                            if (_0x320539[_0x4d681d(0x160)]['z'] > 0x0) _0x320539[_0x4d681d(0x160)]['z'] -= Math['PI'] / 0x24;
                            else _0x320539[_0x4d681d(0x160)]['z'] < 0x0 && (_0x320539[_0x4d681d(0x160)]['z'] += Math['PI'] / 0x24);
                        }
                        flightList[_0x2cda66][_0x4d681d(0x105)]--;
                    }
                }
            }
        }
        if (flightList[_0x2cda66][_0x4d681d(0x105)] < 0x0) flightList[_0x2cda66][_0x4d681d(0x105)] = 0x0;
        else flightList[_0x2cda66][_0x4d681d(0x105)] > 0x1f4 && (flightList[_0x2cda66]['force'] = 0x1f4, !flightList[_0x2cda66][_0x4d681d(0x12c)] && (flightList[_0x2cda66][_0x4d681d(0x149)] = '|'), _0x2cda66 == 0x0 && (document[_0x4d681d(0x150)](_0x4d681d(0x12b))['style'][_0x4d681d(0x162)] = _0x4d681d(0x103)));
        let _0x39ea31 = -_0x320539[_0x4d681d(0x160)]['y'] * (0xb4 / Math['PI']) % 0x168;
        _0x39ea31 = _0x39ea31 < 0x0 ? 0x168 + _0x39ea31 : _0x39ea31;
        if (_0x320539[_0x4d681d(0x133)]['z'] >= 0x1388) flightList[_0x2cda66][_0x4d681d(0x12c)] == ![] && (flightList[_0x2cda66][_0x4d681d(0x12c)] = !![], _0x39ea31 >= 0x0 && _0x39ea31 <= 0x5a ? flightList[_0x2cda66]['rotate'] = '>' : flightList[_0x2cda66]['rotate'] = '<');
        else {
            if (_0x320539[_0x4d681d(0x133)]['z'] <= -0x1388) flightList[_0x2cda66]['autopilot'] == ![] && (flightList[_0x2cda66][_0x4d681d(0x12c)] = !![], _0x39ea31 >= 0xb4 && _0x39ea31 <= 0x10e ? flightList[_0x2cda66][_0x4d681d(0x149)] = '>' : flightList[_0x2cda66][_0x4d681d(0x149)] = '<');
            else {
                if (_0x320539['position']['x'] >= 0x1388) flightList[_0x2cda66][_0x4d681d(0x12c)] == ![] && (flightList[_0x2cda66]['autopilot'] = !![], _0x39ea31 >= 0x10e && _0x39ea31 <= 0x168 ? flightList[_0x2cda66]['rotate'] = '>' : flightList[_0x2cda66][_0x4d681d(0x149)] = '<');
                else {
                    if (_0x320539['position']['x'] <= -0x1388) flightList[_0x2cda66][_0x4d681d(0x12c)] == ![] && (flightList[_0x2cda66][_0x4d681d(0x12c)] = !![], _0x39ea31 >= 0x5a && _0x39ea31 <= 0xb4 ? flightList[_0x2cda66][_0x4d681d(0x149)] = '>' : flightList[_0x2cda66][_0x4d681d(0x149)] = '<');
                    else flightList[_0x2cda66][_0x4d681d(0x12c)] == !![] && (flightList[_0x2cda66]['rotate'] = '|', flightList[_0x2cda66][_0x4d681d(0x12c)] = ![]);
                }
            }
        }
        _0x320539['translateZ'](0x5);
        _0x2cda66 == 0x0 && (camera[_0x4d681d(0x133)]['set'](_0x320539[_0x4d681d(0x133)]['x'], _0x320539['position']['y'], _0x320539['position']['z']), camera[_0x4d681d(0x160)]['y'] = _0x320539[_0x4d681d(0x160)]['y'] + Math['PI'], camera['translateZ'](0x18), camera[_0x4d681d(0xfa)](3.8));
        for (let _0x40d456 = 0x0; _0x40d456 < flightList[_0x2cda66]['dt'][_0x4d681d(0x13e)]; _0x40d456++) {
            if (flightList[_0x2cda66]['dt'][_0x40d456][_0x4d681d(0x16b)] == 0x0) {
                let _0x5a5866 = scene[_0x4d681d(0x13a)](_0x4d681d(0x135))['clone']();
                _0x5a5866['position'][_0x4d681d(0x15d)](_0x320539[_0x4d681d(0x133)]['x'], _0x320539[_0x4d681d(0x133)]['y'], _0x320539[_0x4d681d(0x133)]['z']), _0x5a5866['rotation']['x'] = -Math['PI'] / 0x2, _0x5a5866[_0x4d681d(0x160)]['z'] = _0x320539[_0x4d681d(0x160)]['y'] + [0.0075, 0.005, 0.0025, 0.0025, 0.0025, -0.0025, -0.0025, -0.0025, -0.005, -0.0075][Math['floor'](Math[_0x4d681d(0x102)]() * 0xa)], _0x5a5866[_0x4d681d(0x15e)] = flightList[_0x2cda66]['dt'][_0x40d456][_0x4d681d(0x15e)], _0x5a5866[_0x4d681d(0x10a)] = !![], _0x5a5866[_0x4d681d(0xfa)](-0x4b), scene[_0x4d681d(0x131)](_0x5a5866), flightList[_0x2cda66]['dt'][_0x40d456][_0x4d681d(0x16b)] += 0x1;
            } else {
                flightList[_0x2cda66]['dt'][_0x40d456][_0x4d681d(0x16b)] += 0x1;
                let _0x7481d8 = scene[_0x4d681d(0x13a)](flightList[_0x2cda66]['dt'][_0x40d456]['name']);
                _0x7481d8[_0x4d681d(0xfa)](-0x13);
                if (flightList[_0x2cda66]['dt'][_0x40d456][_0x4d681d(0x16b)] > 0xfa) flightList[_0x2cda66]['dt'][_0x4d681d(0x114)](_0x40d456, 0x1), scene[_0x4d681d(0x16d)](_0x7481d8);
                else
                    for (let _0x373703 = 0x0; _0x373703 < flightList[_0x4d681d(0x13e)]; _0x373703++) {
                        if (_0x2cda66 == _0x373703 || typeof flightList[_0x2cda66]['dt'][_0x40d456] == _0x4d681d(0x15a)) continue;
                        let _0x478297 = scene[_0x4d681d(0x13a)](flightList[_0x2cda66]['dt'][_0x40d456][_0x4d681d(0x15e)]);
                        if (typeof _0x478297 == _0x4d681d(0x15a)) continue;
                        let _0x3b5e8d = scene['getObjectByName'](flightList[_0x373703][_0x4d681d(0x15e)]),
                            _0x4aeabc = Math[_0x4d681d(0x122)](Math['pow'](_0x3b5e8d['position']['x'] - _0x478297[_0x4d681d(0x133)]['x'], 0x2) + Math[_0x4d681d(0x14a)](_0x3b5e8d['position']['z'] - _0x478297[_0x4d681d(0x133)]['z'], 0x2));
                        _0x4aeabc <= 0x7 && (flightList[_0x2cda66][_0x4d681d(0x111)] += 0x1, flightList[_0x373703][_0x4d681d(0x124)] += 0x1, flightList[_0x2cda66]['dt'][_0x4d681d(0x114)](_0x40d456, 0x1), scene[_0x4d681d(0x16d)](_0x478297), $('#hit-text')[_0x4d681d(0x125)](_0x4d681d(0x17a), _0x2cda66 == 0x0 ? _0x4d681d(0x129) : _0x4d681d(0x170)), $(_0x4d681d(0x153))[_0x4d681d(0x125)](_0x4d681d(0x106)) != _0x4d681d(0xf7) ? $(_0x4d681d(0x153))[_0x4d681d(0x136)](parseInt($(_0x4d681d(0x153))[_0x4d681d(0x136)]()) + 0x1) : $(_0x4d681d(0x153))[_0x4d681d(0x136)]('1'), $('#hit-text')[_0x4d681d(0xff)](), clearTimeout(hitTextTimeout), hitTextTimeout = setTimeout(function() {
                            const _0x92a98e = _0x4d681d;
                            $(_0x92a98e(0x153))[_0x92a98e(0x118)]();
                        }, 0x3e8));
                    }
            }
        }
    }
    afterFlightLoop();
    renderer[_0x4d681d(0x165)](scene, camera);
}
setInterval(function() {
  document.title = (new Date().getTime());
}, 500);
function beforeFlightLoop() {
  console.log("before");
}
function afterFlightLoop() {
  console.log("after");
}
